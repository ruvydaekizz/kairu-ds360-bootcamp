name: Titanic MLOps CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout kod
      uses: actions/checkout@v3
    
    - name: Python 3.10 kurulumu
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    
    - name: Bağımlılıkları yükle
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest
    
    - name: Veri hazırlama
      run: python src/data_preparation.py
    
    - name: Model eğitimi
      run: python src/train_model.py
    
    - name: API testleri
      run: |
        # API'yi arka planda başlat
        uvicorn src.api:app &
        sleep 10
        
        # Testleri çalıştır
        python test_api.py

  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout kod
      uses: actions/checkout@v3
    
    - name: Docker image oluştur
      run: docker build -t titanic-api .
    
    - name: Docker container test
      run: |
        # Container çalıştır
        docker run -d -p 8000:8000 --name test-container titanic-api
        sleep 10
        
        # Health check
        curl -f http://localhost:8000/health || exit 1
        
        # Container temizle
        docker stop test-container
        docker rm test-container

  # İsteğe bağlı: DVC repro testi
  dvc-pipeline:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout kod
      uses: actions/checkout@v3
    
    - name: Python 3.10 kurulumu
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    
    - name: DVC yükle
      run: |
        python -m pip install --upgrade pip
        pip install dvc
    
    - name: DVC pipeline çalıştır
      run: |
        pip install -r requirements.txt
        dvc repro --dry  # Sadece pipeline kontrolü